@model SmartASSWeb.Bll.Tag
@{
    ViewBag.Title = "Tag";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@section Heads
{
    <link rel="stylesheet" type="text/css" href="@Url.Content("~/assets/libs/_claviska/jquery-minicolors/jquery.minicolors.css")">
}
<!-- ============================================================== -->
<!-- Bread crumb and right sidebar toggle -->
<!-- ============================================================== -->
<div class="row page-titles">
    <div class="col-md-5 col-12 align-self-center">
        <h3 class="text-themecolor mb-0">Tag</h3>
        <ol class="breadcrumb mb-0">
            <li class="breadcrumb-item"><a href="javascript:void(0)">Home</a></li>
            <li class="breadcrumb-item active">Tag</li>
        </ol>
    </div>
    <div class="col-md-7 col-12 align-self-center d-none d-md-block">

    </div>
</div>
<!-- ============================================================== -->
<!-- End Bread crumb and right sidebar toggle -->
<!-- ============================================================== -->
<!-- ============================================================== -->
<!-- Container fluid  -->
<!-- ============================================================== -->
<div class="container-fluid">
    <!-- ============================================================== -->
    <!-- Start Page Content -->
    <!-- ============================================================== -->
    <!-- Row -->
    <div class="row">
        <div class="col-sm-12">
            <div class="card card-body">
                <h4 class="card-title">Lead</h4>
                <h6 class="card-subtitle"> Capture Tag </h6>
            @using (Ajax.BeginForm("Save", "Tags",
                new { @class = "form-horizontal mt-4", role = "form", id = "tagEditor" },
                new AjaxOptions
                {
                    OnSuccess = "OnSuccess",
                    OnFailure = "OnFailure",
                    LoadingElementId = "progress"
                }))
            {
                    <div class="form-group row">
                        <div class="col-md-6">
                            @Html.LabelFor(m => m.Name)
                            @Html.TextBoxFor(m => m.Name, new { @class = "form-control" })
                        </div>
                        <div class="col-md-6">
                            @Html.LabelFor(m => m.ColorCode)
                            @Html.TextBoxFor(m => m.ColorCode, new { @class = "form-control", id="hue-demo", data_control="hue" })
                        </div>
                    </div>
                    <div class="form-group row">
                        <div class="col-md-10"></div>
                        <div class="col-md-2">
                            <button type="submit" class="btn btn-success waves-effect waves-light mr-2">
                                Submit
                            </button>
                            <button type="btn" class="btn btn-inverse waves-effect waves-light">
                                Cancel
                            </button>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>
@section scripts
{
    <script src="@Url.Content("~/assets/js/pages/forms/jasny-bootstrap.js")"></script>
    <script src="@Url.Content("~/assets/libs/jquery-asColor/dist/jquery-asColor.min.js")"></script>
    <script src="@Url.Content("~/assets/libs/jquery-asGradient/dist/jquery-asGradient.js")"></script>
    <script src="@Url.Content("~/assets/libs/jquery-asColorPicker/dist/jquery-asColorPicker.min.js")"></script>
    <script src="@Url.Content("~/assets/libs/_claviska/jquery-minicolors/jquery.minicolors.min.js")"></script>
    <script>
        $('.demo').each(function() {
            //
            // Dear reader, it's actually very easy to initialize MiniColors. For example:
            //
            //  $(selector).minicolors();
            //
            // The way I've done it below is just for the demo, so don't get confused
            // by it. Also, data- attributes aren't supported at this time...they're
            // only used for this demo.
            //
            $(this).minicolors({
                control: $(this).attr('data-control') || 'hue',
                defaultValue: $(this).attr('data-defaultValue') || '',
                format: $(this).attr('data-format') || 'hex',
                keywords: $(this).attr('data-keywords') || '',
                inline: $(this).attr('data-inline') === 'true',
                letterCase: $(this).attr('data-letterCase') || 'lowercase',
                opacity: $(this).attr('data-opacity'),
                position: $(this).attr('data-position') || 'bottom left',
                swatches: $(this).attr('data-swatches') ? $(this).attr('data-swatches').split('|') : [],
                change: function(value, opacity) {
                    if (!value) return;
                    if (opacity) value += ', ' + opacity;
                    if (typeof console === 'object') {
                        console.log(value);
                    }
                },
                theme: 'bootstrap'
            });

        });
    </script>
    <script type="text/javascript">
        function OnSuccess()
        {

        }
        function OnFailure()
        {

        }
    </script>
}