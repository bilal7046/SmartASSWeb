
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@section Heads
{
    <link href="@Url.Content("~/assets/libs/fullcalendar/dist/fullcalendar.min.css")" rel="stylesheet" />
    <link href="~/assets/libs/jvectormap/jquery-jvectormap.css" rel="stylesheet">
    <link rel="stylesheet" type="text/css" href="~/assets/libs/bootstrap-material-datetimepicker/css/bootstrap-material-datetimepicker.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datetimepicker/4.17.37/css/bootstrap-datetimepicker.min.css" />
}
<!-- ============================================================== -->
<!-- Bread crumb and right sidebar toggle -->
<!-- ============================================================== -->
<div class="row page-titles">
    <div class="col-md-12 col-12 align-self-center">
        <h3 class="text-themecolor mb-0">Setup Meetings</h3>
        <ol class="breadcrumb mb-0">
            <li class="breadcrumb-item"><a href="javascript:void(0)">Home</a></li>
            <li class="breadcrumb-item active">Setup Meetings</li>
        </ol>
        <div class="text-muted mt-0">Choose a date and time to setup a meeting with a potential client. View meetings in month, week or day format.</div>
    </div>
    <div class="col-md-7 col-12 align-self-center d-none d-md-block">

    </div>
</div>
<!-- ============================================================== -->
<!-- End Bread crumb and right sidebar toggle -->
<!-- ============================================================== -->
<!-- ============================================================== -->
<!-- Container fluid  -->
<!-- ============================================================== -->
<div class="container-fluid">
    <!-- ============================================================== -->
    <!-- End Bread crumb and right sidebar toggle -->
    <!-- ============================================================== -->
    <div class="row">
        <div class="col-lg-12">
            <div class="card">
                <div class="card-body">
                    <div id="calendar"></div>
                    <!-- BEGIN MODAL -->
                    <div class="modal fade none-border" id="my-event">
                        <div class="modal-dialog">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <h4 class="modal-title"><strong>Setup Meeting</strong></h4>
                                    <button type="button" class="close" data-dismiss="modal"
                                            aria-hidden="true">
                                        &times;
                                    </button>
                                </div>
                                <div class="modal-body"></div>
                                <div class="modal-footer">
                                    <button type="button" class="btn btn-white waves-effect"
                                            data-dismiss="modal">
                                        Close
                                    </button>
                                    <button type="button"
                                            class="btn btn-success save-event waves-effect waves-light">
                                        Setup
                                        Meeting
                                    </button>
                                    <button type="button"
                                            class="btn btn-danger delete-event waves-effect waves-light"
                                            data-dismiss="modal">
                                        Delete
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                    <!-- Modal Add Category -->
                    <div class="modal fade none-border" id="add-new-event">
                        <div class="modal-dialog">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <h4 class="modal-title"><strong>Add</strong> a category</h4>
                                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                                </div>
                                <div class="modal-body">
                                    <form>
                                        <div class="row">
                                            <div class="col-md-6">
                                                <label class="control-label">Category Name</label>
                                                <input class="form-control form-white" placeholder="Enter name" type="text" name="category-name" />
                                            </div>
                                            <div class="col-md-6">
                                                <label class="control-label">Select Meeting Type</label>
                                                <select class="form-control form-white" data-placeholder="Meeting Type..." name="category-color">
                                                    <option value="info">General</option>
                                                    <option value="success">Lead</option>
                                                    <option value="danger">Urgent</option>
                                                    <option value="primary">Presentation</option>
                                                    <option value="warning">Follow-Up</option>
                                                    <option value="inverse">Event</option>
                                                </select>
                                            </div>
                                        </div>
                                        <div class="row time">
                                            <label class="control-label">Start Time</label>
                                            <input class="form-control form-white" placeholder="Enter Start Time" type="text" name="start-time" id="start-time" />
                                            <label class="control-label">End Time</label>
                                            <input class="form-control form-white" placeholder="Enter End Time" type="text" name="end-time" id="end-time" />
                                        </div>
                                    </form>
                                </div>
                                <div class="modal-footer">
                                    <button type="button"
                                            class="btn btn-danger waves-effect waves-light save-category"
                                            data-dismiss="modal">
                                        Save
                                    </button>
                                    <button type="button" class="btn btn-white waves-effect"
                                            data-dismiss="modal">
                                        Close
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                    <!-- END MODAL -->
                </div>
            </div>
        </div>
    </div>
</div>
<!-- ============================================================== -->
<!-- End Container fluid  -->
<!-- ============================================================== -->
@section scripts{
    <!--This page JavaScript -->
    <script src="@Url.Content("~/assets/libs/moment/min/moment.min.js")"></script>
    <script src="@Url.Content("~/assets/libs/fullcalendar/dist/fullcalendar.min.js")"></script>
    <script src="~/assets/libs/moment/moment.js"></script>
    <script src="~/assets/libs/bootstrap-material-datetimepicker/js/bootstrap-material-datetimepicker-custom.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datetimepicker/4.17.37/js/bootstrap-datetimepicker.min.js"></script>
    @* <script src="@Url.Content("~/assets/js/pages/calendar/cal-init.js")"></script> *@
    <script>
        var CalendarApp = function () {
            this.$body = $("body")
            this.$calendar = $('#calendar'),
                this.$event = ('#calendar-events div.calendar-events'),
                this.$categoryForm = $('#add-new-event form'),
                this.$extEvents = $('#calendar-events'),
                this.$modal = $('#my-event'),
                this.$saveCategoryBtn = $('.save-category'),
                this.$calendarObj = null;
        };
        $(document).ready(function () {

            /* on drop */
            CalendarApp.prototype.onDrop = function (eventObj, date) {
                    var $this = this;
                    // retrieve the dropped element's stored Event Object
                    var originalEventObject = eventObj.data('eventObject');
                    var $categoryClass = eventObj.attr('data-class');
                    // we need to copy it, so that multiple events don't have a reference to the same object
                    var copiedEventObject = $.extend({}, originalEventObject);
                    // assign it the date that was reported
                    copiedEventObject.start = date;
                    if ($categoryClass)
                        copiedEventObject['className'] = [$categoryClass];
                    // render the event on the calendar
                    $this.$calendar.fullCalendar('renderEvent', copiedEventObject, true);
                    // is the "remove after drop" checkbox checked?
                    if ($('#drop-remove').is(':checked')) {
                        // if so, remove the element from the "Draggable Events" list
                        eventObj.remove();
                    }
                },
                /* on click on event */
                CalendarApp.prototype.onEventClick = function (calEvent, jsEvent, view) {
                    var $this = this;
                    var form = $("<form></form>");
                    form.append("<label>Change name</label>");
                    form.append("<div class='input-group'><input class='form-control' type=text value='" + calEvent.title + "' /><span class='input-group-btn'><button type='submit' class='btn btn-success waves-effect waves-light'><i class='fa fa-check'></i> Save</button></span></div>");
                    $this.$modal.modal({
                        backdrop: 'static'
                    });
                    $this.$modal.find('.delete-event').show().end().find('.save-event').hide().end().find('.modal-body').empty().prepend(form).end().find('.delete-event').unbind('click').click(function () {
                        $this.$calendarObj.fullCalendar('removeEvents', function (ev) {
                            return (ev._id == calEvent._id);
                        });
                        $this.$modal.modal('hide');
                    });
                    $this.$modal.find('form').on('submit', function () {
                        calEvent.title = form.find("input[type=text]").val();
                        $this.$calendarObj.fullCalendar('updateEvent', calEvent);
                        $this.$modal.modal('hide');
                        return false;
                    });
                },
                /* on select */
                CalendarApp.prototype.onSelect = function (start, end, allDay) {
                    var $this = this;
                    $this.$modal.modal({
                        backdrop: 'static'
                    });
                    var form = $("<form></form>");
                    form.append("<div class='row'></div>");
                    form.find(".row")
                        .append("<div class='col-md-6'><div class='form-group'><label class='control-label'>Name</label><input class='form-control' placeholder='Enter Name' type='text' name='title'/></div></div>")
                        .append("<div class='col-md-6'><div class='form-group'><label class='control-label'>Meeting Type</label><select class='form-control' name='category'></select></div></div>")
                        .find("select[name='category']")
                        .append("<option value='bg-danger'>Urgent</option>")
                        .append("<option value='bg-success'>Lead</option>")
                        .append("<option value='bg-primary'>Presentation</option>")
                        .append("<option value='bg-info'>General</option>")
                        .append("<option value='bg-warning'>Follow-up</option></div></div>");
                    form.append("<div class='row time'></div>");
                    form.find(".time")
                        .append("<div class='col-md-6'><label class='control-label'>Start Time</label>")
                        .append("<input class='form-control form-white' placeholder='Enter Start Time' type='text' name='start-time' id='start-time'/></div>")
                        .append("<div class='col-md-6'><label class='control-label'>End Time</label>")
                        .append("<input class='form-control form-white' placeholder='Enter End Time' type='text' name='end-time' id='end-time' /></div>");
                    $this.$modal.find('.delete-event').hide().end().find('.save-event').show().end().find('.modal-body').empty().prepend(form).end().find('.save-event').unbind('click').click(function () {
                        form.submit();
                    });
                    $this.$modal.find('form').on('submit', function () {
                        var title = form.find("input[name='title']").val();
                        var beginning = form.find("input[name='beginning']").val();
                        var ending = form.find("input[name='ending']").val();
                        var starttime = form.find("input[name='start-time']").val();
                        var endtime = form.find("input[name='end-time']").val();
                        var categoryClass = form.find("select[name='category'] option:checked").val();
                        if (title !== null && title.length !== 0) {
                            $this.$calendarObj.fullCalendar('renderEvent', {
                                title: title,
                                start: starttime,
                                end: endtime,
                                allDay: false,
                                className: categoryClass
                            }, true);
                            $this.$modal.modal('hide');
                        } else {
                            toastr.error('You have to give a title to your meeting request');
                        }
                        return false;

                    });
                    $this.$calendarObj.fullCalendar('unselect');
                    $('#start-time').bootstrapMaterialDatePicker({ format: 'dddd DD MMMM YYYY - HH:mm' });
                    $('#end-time').bootstrapMaterialDatePicker({ format: 'dddd DD MMMM YYYY - HH:mm' });
                },
                CalendarApp.prototype.enableDrag = function () {
                    //init events
                    $(this.$event).each(function () {
                        // create an Event Object (http://arshaw.com/fullcalendar/docs/event_data/Event_Object/)
                        // it doesn't need to have a start or end
                        var eventObject = {
                            title: $.trim($(this).text()) // use the element's text as the event title
                        };
                        // store the Event Object in the DOM element so we can get to it later
                        $(this).data('eventObject', eventObject);
                        // make the event draggable using jQuery UI
                        $(this).draggable({
                            zIndex: 999,
                            revert: true, // will cause the event to go back to its
                            revertDuration: 0 //  original position after the drag
                        });
                    });
                }
            /* Initializing */
            CalendarApp.prototype.init = function () {
                    this.enableDrag();
                    /*  Initialize the calendar  */
                    var date = new Date();
                    var d = date.getDate();
                    var m = date.getMonth();
                    var y = date.getFullYear();
                    var form = '';
                    var today = new Date($.now());

                    var defaultEvents = [
                        {
                            title: 'Meeting Bertha',
                            start: new Date($.now() + 506800000),
                            className: 'bg-info'
                        }, {
                            title: 'Submission #1',
                            start: today,
                            end: today,
                            className: 'bg-danger'
                        }, {
                            title: 'Meetup with Peter',
                            start: new Date($.now() + 848000000),
                            className: 'bg-info'
                        }, {
                            title: 'Seminar Event',
                            start: new Date($.now() - 1099000000),
                            end: new Date($.now() - 919000000),
                            className: 'bg-warning'
                        }, {
                            title: 'Event Conf.',
                            start: new Date($.now() - 1199000000),
                            end: new Date($.now() - 1199000000),
                            className: 'bg-purple'
                        }, {
                            title: 'Meeting Julia Doe',
                            start: new Date($.now() - 399000000),
                            end: new Date($.now() - 219000000),
                            className: 'bg-info'
                        },
                        {
                            title: 'Meeting with Peter Doe',
                            start: new Date($.now() + 868000000),
                            className: 'bg-danger'
                        }, {
                            title: 'Seminar Event',
                            start: new Date($.now() + 348000000),
                            className: 'bg-success'
                        }
                    ];

                    var $this = this;
                    $this.$calendarObj = $this.$calendar.fullCalendar({
                        slotDuration: '00:15:00',
                        /* If we want to split day time each 15minutes */
                        minTime: '08:00:00',
                        maxTime: '19:00:00',
                        defaultView: 'month',
                        handleWindowResize: true,
                        header: {
                            left: 'prev,next today',
                            center: 'title',
                            right: 'month,agendaWeek,agendaDay'
                        },
                        events: defaultEvents,
                        editable: true,
                        droppable: true, // this allows things to be dropped onto the calendar !!!
                        eventLimit: true, // allow "more" link when too many events
                        selectable: true,
                        drop: function (date) { $this.onDrop($(this), date); },
                        select: function (start, end, allDay) { $this.onSelect(start, end, allDay); },
                        eventClick: function (calEvent, jsEvent, view) { $this.onEventClick(calEvent, jsEvent, view); }

                    });

                    //on new event
                    this.$saveCategoryBtn.on('click',
                        function () {
                            var categoryName = $this.$categoryForm.find("input[name='category-name']").val();
                            var categoryColor = $this.$categoryForm.find("select[name='category-color']").val();
                            if (categoryName !== null && categoryName.length != 0) {
                                $this.$extEvents.append('<div class="calendar-events m-b-20" data-class="bg-' + categoryColor + '" style="position: relative;"><i class="fa fa-circle text-' + categoryColor + ' m-r-10" ></i>' + categoryName + '</div>')
                                $this.enableDrag();
                            }

                        });
                },

                //init CalendarApp
                $.CalendarApp = new CalendarApp, $.CalendarApp.Constructor = CalendarApp;
            $.CalendarApp.init();
        });
    </script>
    <script>
        $('#date-format').bootstrapMaterialDatePicker({ format: 'dddd DD MMMM YYYY - HH:mm' });
        $('#start-time').datetimepicker();
        //$('#start-time').bootstrapMaterialDatePicker({ format: 'dddd DD MMMM YYYY - HH:mm' });
        $('#end-time').bootstrapMaterialDatePicker({ format: 'dddd DD MMMM YYYY - HH:mm' });
    </script>
}