@using SmartASSWeb.Bll
@using SmartASSWeb.Bll.Core
@model SmartASSWeb.ViewModels.ProfileViewModel
@{
    ViewBag.Title = "My Profile";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@section Heads
{
    <link rel="stylesheet" type="text/css" href="//cdn.materialdesignicons.com/5.4.55/css/materialdesignicons.min.css">
    <link rel="stylesheet" type="text/css" href="@Url.Content("~/assets/libs/dropzone/dist/min/dropzone.min.css")">
    <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
    <link rel="stylesheet" type="text/css" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-material-datetimepicker/2.7.1/css/bootstrap-material-datetimepicker.css">
}
<!-- ============================================================== -->
<!-- Bread crumb and right sidebar toggle -->
<!-- ============================================================== -->
<div class="row page-titles">
    <div class="col-md-5 col-12 align-self-center">
        <h3 class="text-themecolor mb-0">Profile</h3>
        <ol class="breadcrumb mb-0">
            <li class="breadcrumb-item"><a href="javascript:void(0)">Home</a></li>
            <li class="breadcrumb-item active">Profile</li>
        </ol>
    </div>
    <div class="col-md-7 col-12 align-self-center d-none d-md-block">

    </div>
</div>
<!-- ============================================================== -->
<!-- End Bread crumb and right sidebar toggle -->
<!-- ============================================================== -->
<!-- ============================================================== -->
<!-- Container fluid  -->
<!-- ============================================================== -->
<div class="container-fluid">
    <!-- ============================================================== -->
    <!-- Start Page Content -->
    <!-- ============================================================== -->
    <!-- Row -->
    <!-- Row -->
    <div class="row">
        <div class="col-12">
            <div class="card">
            @using (Html.BeginForm("SaveProfile", "UserProfile", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
            {
                <div class="card-body">
                    <h4 class="card-title">User Profile</h4>
                    @Html.HiddenFor(p => p.Profile.UserId)
                    <div class="row">
                        <div class="col-sm-12 col-lg-6">
                            <div class="form-group row">
                                <label class="col-sm-3 text-right control-label col-form-label">Email</label>
                                <div class="col-sm-9">
                                    @Html.TextBoxFor(m => m.Profile.Email, new { @class = "form-control", placeholder = "bob@abc.com", @type = "email", @readonly = "true" })
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-12 col-lg-6">
                            
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-12">
                            <h6 class="card-subtitle">Upload your profile picture</h6>
                            <div class="input-group mb-3">
                                <div class="custom-file">
                                    <input type="file" class="custom-file-input" id="profilePictureBtn">
                                    <label class="custom-file-label" for="profilePictureBtn" accept="image/gif, image/jpeg, image/png, image/jpg">Choose file</label>
                                </div>
                            </div>
                            <div class="progress mb-2 progress-sm">
                                <div id="progressbar" class="progress-bar progress-lg bg-success" role="progressbar" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100"></div>
                            </div>
                            @Html.HiddenFor(c => c.Profile.PhotoUrl)
                        </div>
                    </div>
                    <hr/>
                    <div class="row">
                        <div class="col-sm-12 col-lg-6">
                            <div class="form-group row">
                                <label class="col-sm-3 text-right control-label col-form-label">First Name</label>
                                <div class="col-sm-9">
                                    @Html.TextBoxFor(m => m.Profile.FirstName, new { @class = "form-control", placeholder = "First Name", required="required", data_validation_required_message="The First Name is required" })
                                    @Html.ValidationMessageFor(model => model.Profile.FirstName, string.Empty, new { sytle="font-color:red;"})
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-12 col-lg-6">
                            <div class="form-group row">
                                <label class="col-sm-3 text-right control-label col-form-label">Last Name</label>
                                <div class="col-sm-9">
                                    @Html.TextBoxFor(m => m.Profile.LastName, new { @class = "form-control", placeholder = "Last Name", required="required", data_validation_required_message="The Last Name is required" })
                                    @Html.ValidationMessageFor(model => model.Profile.LastName)
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-sm-12 col-lg-6">
                            <div class="form-group row">
                                <label class="col-sm-3 text-right control-label col-form-label">Gender</label>
                                <div class="col-sm-9">
                                    @Html.DropDownListFor(m => m.Profile.Gender, new List<SelectListItem> { new SelectListItem() { Text = EnumGender.Male.GetDescription(), Value = EnumGender.Male.ToString() }, new SelectListItem() { Text = EnumGender.Female.ToString(), Value = EnumGender.Female.ToString() }, new SelectListItem() { Text = EnumGender.Other.ToString(), Value = EnumGender.Other.ToString() } }, "-- Select --", new { @class = "custom-select col-12", required="required", data_validation_required_message="Gender is required" })
                                    @Html.ValidationMessageFor(model => model.Profile.Gender)
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-12 col-lg-6">
                            <div class="form-group row">
                                <label class="col-sm-3 text-right control-label col-form-label">Date of Birth</label>
                                <div class="col-sm-9">
                                    @Html.TextBoxFor(m => m.Profile.DateOfBirthHolder, new { @class = "form-control", required = "required", data_validation_required_message = "Date of Birth is required" })
                                    @Html.ValidationMessageFor(model => model.Profile.DateOfBirthHolder)
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <hr/>
                <div class="card-body">
                    <div class="form-group mb-0 text-right">
                        <button type="submit" class="btn btn-info waves-effect waves-light">Save</button>
                        <button id="btnCancel" type="button" class="btn btn-dark waves-effect waves-light">Cancel</button>
                    </div>
                </div>
            }
            </div>
        </div>
    </div>
    <!-- End Row -->
</div>
@section scripts
{
    <script src="@Url.Content("~/assets/libs/dropzone/dist/min/dropzone.min.js")"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-material-datetimepicker/2.7.1/js/bootstrap-material-datetimepicker.min.js"></script>
    <script>
        $('#btnCancel').click(function (e) {
            e.preventDefault();
            location.href = '@Url.Action("Index", "UserProfile")';
        });

        var uploader = document.getElementById("progressbar");
        var userId = $('#Profile_UserId').val();

        $('#profilePictureBtn').change(function(e) {

            var file = e.target.files[0];
            var reader = new FileReader();
            reader.onloadend = function(evt) {
                var storageRef = firebaseApp.storage().ref('userProfiles/' + userId);
                // Create file metadata to update
                //var newMetadata = {
                //    cacheControl: 'public,max-age=300',
                //    contentType: file.type
                //}

                // Update metadata properties
                //storageRef.updateMetadata(newMetadata).then(function(metadata) {
                //    console.log('Metadata Updated');
                //}).catch(function(error) {
                //    // Uh-oh, an error occurred!
                //    toastr.error('Error: ' + error);
                //});
                var task = storageRef.put(file);
                // 
                task.on('state_changed',
                    function progress(snapshot) {
                        var percentage = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;
                        uploader.value = percentage;
                        uploader.setAttribute('aria-valuenow', percentage);
                    },
                    function error(err) {
                        toastr.error(err);
                    },
                    function complete(result) {
                        //toastr.success('File Uploaded');
                        if (task.snapshot.exists) {
                            task.snapshot.ref.getDownloadURL().then(function(downloadURL) {
                                console.log('File available at', downloadURL);
                                $("#Profile_PhotoUrl").val(url); 
                            });
                        } else {
                            var resizedStorageRef = firebaseApp.storage().ref('userProfiles/' + userId + '_200x200');
                            resizedStorageRef.getDownloadURL().then(function(downloadURL) {
                                console.log('File available at', downloadURL);
                                $("#Profile_PhotoUrl").val(downloadURL);
                            });
                        }
                    }
                );
            }
            reader.onerror = function(e) {
                console.log("Failed file read: " + e.toString());
            };
            reader.readAsDataURL(file);
        });

        $(function () {
            $('input[name="Profile.DateOfBirthHolder"]').bootstrapMaterialDatePicker({
                weekStart: 0,
                time: false,
                locale: {
                    format: 'DD/MM/YYYY'
                },
                maxDate: new Date(),
                icons: {
                    time: "fa fa-clock-o",
                    date: "fa fa-calendar",
                    up: "fa fa-arrow-up",
                    down: "fa fa-arrow-down",
                    previous: "fa fa-chevron-left",
                    next: "fa fa-chevron-right",
                    today: "fa fa-clock-o",
                    clear: "fa fa-trash-o"
                }
            });
        });
    </script>
}
 
