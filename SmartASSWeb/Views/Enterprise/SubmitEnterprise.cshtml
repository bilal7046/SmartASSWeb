@using SmartASSWeb.Bll  
@model SmartASSWeb.ViewModels.EnterpriseViewModel
@{
    ViewBag.Title = "Submit New Enterprise";
    Layout = "~/Views/Shared/_Layout.cshtml";
    ILookupDictionary dict = new LookupDictionary();
}
@section Heads
{
    <link rel="stylesheet" type="text/css" href="~/assets/libs/select2/dist/css/select2.min.css">
}
<!-- ============================================================== -->
<!-- Bread crumb and right sidebar toggle -->
<!-- ============================================================== -->
<div class="row page-titles">
    <div class="col-md-12 col-12 align-self-center">
        <h3 class="text-themecolor mb-0">Submit Enterprise</h3>
        <ol class="breadcrumb mb-0">
            <li class="breadcrumb-item"><a href="javascript:void(0)">Home</a></li>
            <li class="breadcrumb-item active">Submit Enterprise</li>
        </ol>
        <div class="text-muted mt-0">Add new enterprise and upload its users</div>
    </div>
    <div class="col-md-7 col-12 align-self-center d-none d-md-block">
    </div>
</div>
<!-- ============================================================== -->
<!-- End Bread crumb and right sidebar toggle -->
<!-- ============================================================== -->
<!-- ============================================================== -->
<!-- Container fluid  -->
<!-- ============================================================== -->
<div class="container-fluid">
    <!-- ============================================================== -->
    <!-- Start Page Content -->
    <!-- ============================================================== -->
    <!-- Row -->

    <div class="row">
        <div class="col-12">
            <div class="card">
                @using (Ajax.BeginForm("SubmitEnterprise", "Enterprise", null,
                    new AjaxOptions
                    {
                        OnSuccess = "OnSuccess",
                        OnFailure = "OnFailure",
                        LoadingElementId = "progress"
                    },
                    new { @class = "form-horizontal mt-4", role = "form", id = "companyEditor", enctype = "multipart/form-data" }))
                {
                    <div class="card-body">
                        <h4 class="card-title">Enterprise Basic Information</h4>
                        <div class="row">
                            <div class="col-sm-12 col-lg-6">
                                <div class="form-group row">
                                    <label class="col-sm-3 text-right control-label col-form-label">Enterprise Name</label>
                                    <div class="col-sm-9">
                                        @Html.TextBoxFor(m => m.Enterprise.Name, new { @class = "form-control", placeholder = "Enterprise Name" })
                                        @Html.ValidationMessageFor(model => model.Enterprise.Name)
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-12 col-lg-6">
                                <div class="form-group row">
                                    <label class="col-sm-3 text-right control-label col-form-label">Industry</label>
                                    <div class="col-sm-9">
                                        @Html.DropDownListFor(m => m.Enterprise.Industry, new SelectList(@dict.Industries, "Value", "Key"), "-- Select --", new { @class = "custom-select col-12" })
                                        @Html.ValidationMessageFor(model => model.Enterprise.Industry)
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <hr>
                    <div class="card-body">
                        <h4 class="card-title">Enterprise Manager Information</h4>
                        <div class="row">
                            <div class="col-sm-12 col-lg-6">
                                <div class="form-group row">
                                    <label for="cono12" class="col-sm-3 text-right control-label col-form-label">Manager First Name</label>
                                    <div class="col-sm-9">
                                        @Html.TextBoxFor(m => m.Enterprise.ManagerFirstName, new { @class = "form-control", placeholder = "Manager First Name" })
                                        @Html.ValidationMessageFor(model => model.Enterprise.ManagerFirstName)
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-12 col-lg-6">
                                <div class="form-group row">
                                    <label for="cono12" class="col-sm-3 text-right control-label col-form-label">Manager Last Name</label>
                                    <div class="col-sm-9">
                                        @Html.TextBoxFor(m => m.Enterprise.ManagerLastName, new { @class = "form-control", placeholder = "Manager Last Name" })
                                        @Html.ValidationMessageFor(model => model.Enterprise.ManagerLastName)
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-sm-12 col-lg-6">
                                <div class="form-group row">
                                    <label for="cono12" class="col-sm-3 text-right control-label col-form-label">Manager's Title</label>
                                    <div class="col-sm-9">
                                        @Html.TextBoxFor(m => m.Enterprise.ManagerTitle, new { @class = "form-control", placeholder = "Manager,s Title" })
                                        @Html.ValidationMessageFor(model => model.Enterprise.ManagerTitle)
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-12 col-lg-6">
                                <div class="form-group row">

                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-sm-12 col-lg-6">
                                <div class="form-group row">
                                    <label for="cono12" class="col-sm-3 text-right control-label col-form-label">Manager Phone</label>
                                    <div class="col-sm-9">
                                        @Html.TextBoxFor(m => m.Enterprise.ManagerPhone, new { @class = "form-control", placeholder = "Manager Phone", @type = "phone" })
                                        @Html.ValidationMessageFor(model => model.Enterprise.ManagerPhone)
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-12 col-lg-6">
                                <div class="form-group row">
                                    <label for="cono12" class="col-sm-3 text-right control-label col-form-label">Manager Email</label>
                                    <div class="col-sm-9">
                                        @Html.TextBoxFor(m => m.Enterprise.ManagerEmail, new { @class = "form-control", placeholder = "Manager Email", @type = "email" })
                                        @Html.ValidationMessageFor(model => model.Enterprise.ManagerEmail)
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <hr>
                    <div class="card-body">
                        <h4 class="card-title">Contact Information</h4>
                        <div class="row">
                            <div class="col-sm-12 col-lg-6">
                                <div class="form-group row">
                                    <label class="col-sm-3 text-right control-label col-form-label">Email</label>
                                    <div class="col-sm-9">
                                        @Html.TextBoxFor(m => m.Enterprise.Email, new { @class = "form-control", placeholder = "bob@abc.com", @type = "email" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-12 col-lg-6">
                                <div class="form-group row">
                                    <label class="col-sm-3 text-right control-label col-form-label">Website</label>
                                    <div class="col-sm-9">
                                        @Html.TextBoxFor(m => m.Enterprise.Website, new { @class = "form-control", placeholder = "http://", @type = "url" })
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-sm-12 col-lg-6">
                                <div class="form-group row">
                                    <label for="cono12" class="col-sm-3 text-right control-label col-form-label">Phone</label>
                                    <div class="col-sm-9">
                                        @Html.TextBoxFor(m => m.Enterprise.Phone1, new { @class = "form-control", @type = "tel" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-12 col-lg-6">
                                <div class="form-group row">
                                    <label for="cono12" class="col-sm-3 text-right control-label col-form-label">Mobile</label>
                                    <div class="col-sm-9">
                                        @Html.TextBoxFor(m => m.Enterprise.Mobile, new { @class = "form-control", @type = "tel" })
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <hr />
                    <div class="card-body">
                        <h4 class="card-title">Address Information</h4>
                        <div class="row">
                            <div class="col-sm-12 col-lg-6">
                                <div class="form-group row">
                                    <label class="col-sm-3 text-right control-label col-form-label">Address 1</label>
                                    <div class="col-sm-9">
                                        @Html.TextBoxFor(m => m.Enterprise.Address1, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.Enterprise.Address1)
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-12 col-lg-6">
                                <div class="form-group row">
                                    <label class="col-sm-3 text-right control-label col-form-label">Province</label>
                                    <div class="col-sm-9">
                                        @Html.TextBoxFor(m => m.Enterprise.Province, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.Enterprise.Province)
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-sm-12 col-lg-6">
                                <div class="form-group row">
                                    <label for="cono12" class="col-sm-3 text-right control-label col-form-label">Address 2</label>
                                    <div class="col-sm-9">
                                        @Html.TextBoxFor(m => m.Enterprise.Address2, new { @class = "form-control" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-12 col-lg-6">
                                <div class="form-group row">
                                    <label for="cono12" class="col-sm-3 text-right control-label col-form-label">Country</label>
                                    <div class="col-sm-9">
                                        @Html.TextBoxFor(m => m.Enterprise.Country, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.Enterprise.Country)
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-sm-12 col-lg-6">
                                <div class="form-group row">
                                    <label class="col-sm-3 text-right control-label col-form-label">City</label>
                                    <div class="col-sm-9">
                                        @Html.TextBoxFor(m => m.Enterprise.City, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.Enterprise.City)
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-12 col-lg-6">
                                <div class="form-group row">
                                    <label class="col-sm-3 text-right control-label col-form-label">Postal Code</label>
                                    <div class="col-sm-9">
                                        @Html.TextBoxFor(m => m.Enterprise.PostalCode, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.Enterprise.PostalCode)
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <hr />
                    <div class="card-body">
                        <h4 class="card-title">Enterprise Users</h4><br />
                        <div class="row" style="margin-top:15px">
                            <label class="col-sm-2 text-right control-label col-form-label">Document</label>
                            <div class="col-sm-8 col-lg-8">
                                <h6 class="card-subtitle">Upload document</h6>
                                <div class="input-group mb-3">
                                    <div class="custom-file">
                                        <input type="file" class="custom-file-input" id="excelUpload">
                                        <label class="custom-file-label" for="excelUpload" accept="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel">Upload</label>
                                    </div>
                                </div>
                                <div class="progress mb-2 progress-sm">
                                    <div id="progressbar" class="progress-bar progress-lg bg-success" role="progressbar" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100"></div>
                                </div>
                                @Html.HiddenFor(p => p.Enterprise.EnterpriseId)
                            </div>
                            <div class="col-sm-2 col-lg-2">
                                <button type="button" class="btn btn-cyan">Download Template</button>
                            </div>
                        </div>
                    </div>
                    <hr />
                    <div class="card-body">
                        <div class="form-group mb-0 text-right">
                            <button type="submit" class="btn btn-info waves-effect waves-light">Save</button>
                            <button type="button" class="btn btn-dark waves-effect waves-light" onclick="window.history.back()">Cancel</button>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>
@section scripts
{
    <!-- This Page JS -->
    <script src="~/assets/libs/select2/dist/js/select2.full.min.js"></script>
    <script src="~/assets/libs/select2/dist/js/select2.min.js"></script>
    <script>
        //-- Phone Controls
        var phone = document.querySelector("#Company_Phone1");
        var mobile = document.querySelector("#Company_Mobile");
        window.intlTelInput(phone, {
            preferredCountries: ['za'],
            utilsScript: "../../assets/js/utils.js"
        });
        window.intlTelInput(mobile, {
            placeholderNumberType: "MOBILE",
            preferredCountries: ['za'],
            // separateDialCode: true,
            geoIpLookup: function(callback) {
                $.get("http://ipinfo.io", function() {}, "jsonp").always(function(resp) {
                    var countryCode = (resp && resp.country) ? resp.country : "";
                    callback(countryCode);
                });
            },
            utilsScript: "../../assets/js/utils.js"
        });

        //Company Logo Upload
        var uploader = document.getElementById('progressbar');

        $('#profilePictureBtn').change(function(e) {

            var companyId = $('#CompanyId').val();
            var file = e.target.files[0];
            var reader = new FileReader();
            reader.onloadend = function(evt) {
                var storageRef = firebaseApp.storage().ref('companyProfiles/' + companyId);
                var task = storageRef.put(file);
                //
                task.on('state_changed',
                    function progress(snapshot) {
                        var percentage = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;
                        uploader.value = percentage;
                        uploader.setAttribute('aria-valuenow', percentage);
                    },
                    function error(err) {
                        toastr.error(err);
                    },
                    function complete(result) {
                        toastr.success('File Uploaded');

                        if (task.snapshot.exists) {
                            task.snapshot.ref.getDownloadURL().then(function(downloadURL) {
                                console.log('File available at', downloadURL);
                                $("#LogoUrl").val(url);
                            });
                        } else {
                            var resizedStorageRef = firebaseApp.storage().ref('companyProfiles/' + companyId + '_200x200');
                            resizedStorageRef.getDownloadURL().then(function(downloadURL) {
                                console.log('File available at', downloadURL);
                                $("#LogoUrl").val(downloadURL);
                            });
                        }
                    }
                );
            }
            reader.onerror = function(e) {
                console.log("Failed file read: " + e.toString());
            };
            reader.readAsDataURL(file);
        });

        function OnSuccess(response) {
            toastr.success('Imported successfully');
            if (response.IsSuccessful === true) {
                Swal.fire({
                        title: "Import Status",
                        text: response.Message,
                        type: "success",
                        showCancelButton: true,
                        confirmButtonColor: "#DD6B55",
                        confirmButtonText: "OK",
                        closeOnConfirm: true
                    },
                    function() {
                        window.location.href = "@Url.Action("ManageEnterprise", "Enterprise")";
                    });
            } else {
                Swal.fire({
                        title: "Error on Import!",
                        text: response.Message,
                        type: "error",
                        showCancelButton: true,
                        confirmButtonColor: "#DD6B55",
                        confirmButtonText: "OK",
                        closeOnConfirm: true
                    });
            }
        }

        function OnFailure(response) {
            toastr.error('Error: ' + response.Message);
            Swal.fire({
                title: "Error on Import!",
                text: response.Message,
                type: "error",
                showCancelButton: true,
                confirmButtonColor: "#DD6B55",
                confirmButtonText: "OK",
                closeOnConfirm: true
            });
        }

        function tuExcelBtnClick(e) {
            e.preventDefault();
            window.open("@Url.Action("DownloadExcelTemplate", "Enterprise")", "_blank");
        }
    </script>
}
